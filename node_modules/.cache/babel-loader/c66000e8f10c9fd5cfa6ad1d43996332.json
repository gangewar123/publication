{"ast":null,"code":"import { mapValues } from 'lodash-es';\nimport { isPlainObject } from 'lodash-es';\nvar FROM_HIGHCHARTS_PROVIDER = 'getHighcharts';\nvar FROM_CHART_PROVIDER = 'getChart';\nvar FROM_AXIS_PROVIDER = 'getAxis';\nvar FROM_SERIES_PROVIDER = 'getSeries';\nvar DEBOUNCED_REDRAW = 'needsRedraw';\nexport var PROVIDED_PROPS = [FROM_HIGHCHARTS_PROVIDER, FROM_CHART_PROVIDER, FROM_AXIS_PROVIDER, FROM_SERIES_PROVIDER, DEBOUNCED_REDRAW];\n\nfunction cleanConfig() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // omit provided props\n\n  return Object.keys(config).filter(function (key) {\n    return PROVIDED_PROPS.indexOf(key) < 0;\n  }).reduce(function (object, key) {\n    object[key] = config[key];\n    return object;\n  }, {});\n}\n\nfunction deepCleanConfig(config) {\n  var cleanedRoot = cleanConfig(config);\n  return mapValues(cleanedRoot, function (prop) {\n    if (isPlainObject(prop) === false) return prop;\n    return deepCleanConfig(prop);\n  });\n}\n\nexport default function removeProvidedProps(func) {\n  return function (config) {\n    var cleanedConfig = deepCleanConfig(config);\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    return func.apply(void 0, [cleanedConfig].concat(rest));\n  };\n}","map":null,"metadata":{},"sourceType":"module"}