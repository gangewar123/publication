{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid/v4';\nimport { attempt } from 'lodash-es';\nimport Hidden from '../Hidden';\nimport getModifiedProps from '../../utils/getModifiedProps';\nimport { logModuleErrorMessage } from '../../utils/warnings';\n\nvar Annotation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Annotation, _Component);\n\n  function Annotation(props) {\n    var _this;\n\n    _classCallCheck(this, Annotation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Annotation).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getAnnotationConfig\", function () {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          children = _this$props.children,\n          rest = _objectWithoutProperties(_this$props, [\"id\", \"children\"]);\n\n      if (!_this.id) {\n        _this.id = typeof id === 'function' ? id() : id;\n      }\n\n      return _objectSpread({\n        id: _this.id\n      }, rest);\n    });\n\n    _this.state = {\n      rendered: false\n    };\n\n    if (process.env.NODE_ENV === 'development') {\n      var getChart = props.getChart;\n\n      if (getChart().addAnnotation === null) {\n        logModuleErrorMessage('<Annotation />', 'annotations');\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Annotation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chart = this.props.getChart(); // Create Highcharts Annotation\n\n      var opts = this.getAnnotationConfig();\n      chart.addAnnotation(opts);\n      this.setState({\n        rendered: true\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (getModifiedProps(prevProps, this.props) === false) return;\n      var chart = this.props.getChart(); // Annotations cannot be updated, we have to remove and re-add\n\n      var opts = this.getAnnotationConfig();\n      chart.removeAnnotation(opts.id);\n      chart.addAnnotation(opts);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var chart = this.props.getChart();\n      attempt(chart.removeAnnotation, this.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n      if (!children || !this.state.rendered) return null;\n      var annotationChildren = Children.map(children, function (child) {\n        if (isValidElement(child) === false) return child;\n        return cloneElement(child, {\n          id: _this2.id\n        });\n      });\n      return React.createElement(Hidden, null, annotationChildren);\n    }\n  }]);\n\n  return Annotation;\n}(Component);\n\n_defineProperty(Annotation, \"defaultProps\", {\n  id: uuid\n});\n\nexport default Annotation;","map":null,"metadata":{},"sourceType":"module"}