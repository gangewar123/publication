{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { defaultTo } from 'lodash-es';\nimport DelayRender from '../DelayRender';\nimport provideChart from '../ChartProvider';\nimport { Consumer } from '../AxisContext';\nimport getDisplayName from '../../utils/getDisplayName';\nimport clean from '../../utils/removeProvidedProps'; // This is a HOC function.\n// It takes a component...\n\nexport default function provideAxis(Component) {\n  // ...and returns another component...\n  var AxisWrappedComponent = function AxisWrappedComponent(props) {\n    // ... and renders the wrapped component with the context axis\n    // Notice that we pass through any additional props as well\n    var requiresAxis = defaultTo(props.requiresAxis, true);\n    return React.createElement(DelayRender, null, React.createElement(Consumer, null, function (axis) {\n      if (!axis && props.axisId) {\n        var chart = props.getChart();\n        axis = chart.get(props.axisId);\n      } // Some series (such as Pie and Funnel don't require an axis)\n\n\n      if (!axis && requiresAxis) return null;\n\n      var getAxis = function getAxis() {\n        return {\n          object: axis,\n          id: axis.userOptions && axis.userOptions.id,\n          type: axis.coll,\n          update: clean(axis.update.bind(axis)),\n          remove: axis.remove.bind(axis),\n          addPlotBand: clean(axis.addPlotBand.bind(axis)),\n          removePlotBand: axis.removePlotBand.bind(axis),\n          addPlotLine: clean(axis.addPlotLine.bind(axis)),\n          removePlotLine: axis.removePlotLine.bind(axis),\n          getExtremes: axis.getExtremes.bind(axis),\n          setExtremes: axis.setExtremes.bind(axis),\n          setTitle: clean(axis.setTitle.bind(axis))\n        };\n      };\n\n      return React.createElement(Component, _extends({}, props, {\n        getAxis: getAxis\n      }));\n    }));\n  };\n\n  AxisWrappedComponent.displayName = \"Axis.Provider(\".concat(getDisplayName(Component), \")\");\n  return provideChart(AxisWrappedComponent);\n}","map":null,"metadata":{},"sourceType":"module"}