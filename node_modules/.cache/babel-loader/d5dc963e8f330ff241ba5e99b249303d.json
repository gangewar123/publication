{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { pickBy } from 'lodash-es';\nimport { attempt } from 'lodash-es';\nimport { find } from 'lodash-es';\nimport getModifiedProps from '../../utils/getModifiedProps';\n\nvar PlotLineLabel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlotLineLabel, _Component);\n\n  function PlotLineLabel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlotLineLabel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlotLineLabel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getLabelProps\", function (props) {\n      return pickBy(props, function (value, propName) {\n        return PlotLineLabel.labelProps.indexOf(propName) > -1;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updatePlotLineLabel\", function (config) {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          getAxis = _this$props.getAxis;\n      var axis = getAxis();\n      window.requestAnimationFrame(function () {\n        var plotLine = axis.object && find(axis.object.plotLinesAndBands, function (line) {\n          return line.id === id;\n        });\n\n        if (plotLine) {\n          plotLine.options.label = _this.getLabelProps(config);\n          plotLine.render();\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PlotLineLabel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          text = _this$props2.children,\n          rest = _objectWithoutProperties(_this$props2, [\"children\"]);\n\n      this.updatePlotLineLabel(_objectSpread({\n        text: text\n      }, rest));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (getModifiedProps(prevProps, this.props, true) === false) return;\n\n      var _this$props3 = this.props,\n          text = _this$props3.children,\n          rest = _objectWithoutProperties(_this$props3, [\"children\"]);\n\n      this.updatePlotLineLabel(_objectSpread({\n        text: text\n      }, rest));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          rest = _objectWithoutProperties(_this$props4, [\"children\"]);\n\n      attempt(this.updatePlotLineLabel, _objectSpread({\n        text: null\n      }, rest));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return PlotLineLabel;\n}(Component);\n\n_defineProperty(PlotLineLabel, \"labelProps\", ['text', 'align', 'rotation', 'style', 'textAlign', 'useHTML', 'verticalAlign', 'x', 'y']);\n\nexport default PlotLineLabel;","map":null,"metadata":{},"sourceType":"module"}