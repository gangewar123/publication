import { lowerFirst } from 'lodash-es';
import { pickBy } from 'lodash-es';
import { omitBy } from 'lodash-es';
import { mapKeys } from 'lodash-es';
export var getEventHandlerProps = function getEventHandlerProps(props) {
  return pickBy(props, _isEventKey);
};
export var getNonEventHandlerProps = function getNonEventHandlerProps(props) {
  return omitBy(props, _isEventKey);
};
export var getEventsConfig = function getEventsConfig(props) {
  var eventProps = getEventHandlerProps(props);
  return mapKeys(eventProps, function (handler, eventName) {
    return lowerFirst(eventName.replace(/^on/, ''));
  });
};
export var addEventHandlersManually = function addEventHandlersManually(Highcharts, context, props) {
  var eventProps = getEventsConfig(props);
  Object.keys(eventProps).forEach(function (eventName) {
    Highcharts.addEvent(context, eventName, eventProps[eventName]);
  });
};
export var addEventHandlers = function addEventHandlers(updateFn, props) {
  var redraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var events = getEventsConfig(props);
  updateFn({
    events: events
  }, redraw);
};

var _isEventKey = function _isEventKey(value, key) {
  return key.indexOf('on') === 0 && typeof value === 'function';
};

export default addEventHandlers;