import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { Component } from 'react';

var DelayRender =
/*#__PURE__*/
function (_Component) {
  _inherits(DelayRender, _Component);

  function DelayRender() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, DelayRender);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DelayRender)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      render: false
    });

    _defineProperty(_assertThisInitialized(_this), "renderTimeout", null);

    _defineProperty(_assertThisInitialized(_this), "unmounted", false);

    return _this;
  }

  _createClass(DelayRender, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.renderTimeout = window.requestAnimationFrame(function () {
        if (_this2.unmounted === false) {
          _this2.setState({
            render: true
          });
        }

        _this2.renderTimeout = null;
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unmounted = true;

      if (this.renderTimeout !== null) {
        window.cancelAnimationFrame(this.renderTimeout);
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.state.render) return null;
      return this.props.children;
    }
  }]);

  return DelayRender;
}(Component);

export default DelayRender;