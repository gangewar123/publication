import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import Hidden from '../Hidden';

var Debug =
/*#__PURE__*/
function (_Component) {
  _inherits(Debug, _Component);

  function Debug() {
    _classCallCheck(this, Debug);

    return _possibleConstructorReturn(this, _getPrototypeOf(Debug).apply(this, arguments));
  }

  _createClass(Debug, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props,
          varName = _this$props.varName,
          getChart = _this$props.getChart;
      var chart = getChart();
      window[varName] = chart.object; // eslint-disable-next-line no-console

      console.log("Chart instance available as global variable as window.".concat(varName));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window[this.props.varName] = undefined;
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement(Hidden, null);
    }
  }]);

  return Debug;
}(Component);

_defineProperty(Debug, "defaultProps", {
  varName: 'chart'
});

export default Debug;